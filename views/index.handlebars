<h1>BajkDojadę</h1>
<label>From:</label><input type="text" id="from-point" value="Wrocław">
<label>To:</label><input type="text" id="to-point" value="Radom">
<button id="find-button" onclick="getSearchingCoordinates()">Find</button>
<div id="map"></div>
<label>top</label><input type="text" id="top">
<label>right</label><input type="text" id="right"><br>
<label>bottom</label><input type="text" id="bottom">
<label>left</label><input type="text" id="left">
<div>
    <ul id="stations"></ul>
</div>
<script type="text/javascript">
    var view = new ol.View({
        //projection: 'EPSG:4326',
        center: ol.proj.fromLonLat([17, 51]),
        zoom: 10
    });
    var raster = new ol.layer.Tile({
        source: new ol.source.OSM()
    });

    var iconFeatures=[];

    var iconFeature = new ol.Feature({
        geometry: new ol.geom.Point(ol.proj.transform([-72.0704, 46.678], 'EPSG:4326',
                'EPSG:3857')),
        name: 'Null Island',
        population: 4000,
        rainfall: 500
    });

    iconFeatures.push(iconFeature);

    var vectorSource = new ol.source.Vector({
        features: iconFeatures //add an array of features
    });

    var iconStyle = new ol.style.Style({
        fill: new ol.style.Fill({
            color: 'rgba(255, 255, 255, 0.2)'
        }),
        stroke: new ol.style.Stroke({
            color: '#ffcc33',
            width: 2
        }),
        image: new ol.style.Circle({
            radius: 7,
            fill: new ol.style.Fill({
                color: '#ffcc33'
            })
        })
    });


    var vectorLayer = new ol.layer.Vector({
        source: vectorSource,
        style: iconStyle
    });

    function display(id, value) {
        document.getElementById(id).value = value.toFixed(2);
    }

    function wrapLon(value) {
        var worlds = Math.floor((value + 180) / 360);
        return value - (worlds * 360);
    }

    function getLocForAddress(address){
        return $.ajax({
            type: "GET",
            contentType: "application/json",
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            url: "http://nominatim.openstreetmap.org/search?format=json&q=" + address,
            dataType: 'json'
        })
    }

    var fromAddress;
    var toAddress;

    function getSearchingCoordinates() {
        fromAddress = document.getElementById("from-point").value;
        toAddress = document.getElementById("to-point").value;

        if(!fromAddress || !toAddress){
            return 1;
        }
        $.when(getLocForAddress(fromAddress),getLocForAddress(toAddress))
                .then(function(resp1, resp2) {
                    var min_lon = parseFloat(Math.min(resp1[0][0].lon, resp2[0][0].lon));
                    var max_lon = parseFloat(Math.max(resp1[0][0].lon, resp2[0][0].lon));
                    var min_lat = parseFloat(Math.min(resp1[0][0].lat, resp2[0][0].lat));
                    var max_lat = parseFloat(Math.max(resp1[0][0].lat, resp2[0][0].lat));

                    var coords = [resp1[0][0].lon, resp1[0][0].lat, resp2[0][0].lon, resp2[0][0].lat];
                    drawStartAndFinish(resp1[0][0].lon,
                            resp1[0][0].lat,
                            resp2[0][0].lon,
                            resp2[0][0].lat);
                    console.log(coords);
                    var min_xy = ol.proj.fromLonLat([min_lon, min_lat]);
                    var max_xy = ol.proj.fromLonLat([max_lon, max_lat]);
                    view.fit(min_xy.concat(max_xy), {
                        duration: 500,
                        padding: [15, 15, 15, 15]
                    });
                    // TODO: Zmienić zakres mapy tak, by widoczne były obie lokalizacje.
                    $.ajax({
                        type: "GET",
                        contentType: "application/json",
                        url: "http://localhost:3000/mapquest",
                        data: {'coords': coords},
                        //data: {'coords' : 'hallo!'},
                        success: function (data) {
                            console.log("Wysłano start i koniec.");
                        },
                        dataType: 'json'
                    });
        });
    }


    function onMoveEnd(evt) {
        var map = evt.map;
        var extent = map.getView().calculateExtent(map.getSize());
        var bottomLeft = ol.proj.transform(ol.extent.getBottomLeft(extent),
                'EPSG:3857', 'EPSG:4326');
        var topRight = ol.proj.transform(ol.extent.getTopRight(extent),
                'EPSG:3857', 'EPSG:4326');
        display('left', wrapLon(bottomLeft[0]));
        display('bottom', bottomLeft[1]);
        display('right', wrapLon(topRight[0]));
        display('top', topRight[1]);

        var coords = [];
        coords.push(bottomLeft[1]);
        coords.push(wrapLon(bottomLeft[0]));
        coords.push(topRight[1]);
        coords.push(wrapLon(topRight[0]));

        $.ajax({
            type: "GET",
            contentType: "application/json",
            url: "http://localhost:3000/aqi/stations",
            data: {'coords': coords},
            //data: {'coords' : 'hallo!'},
            success: function (data) {
                var ul_stations = document.getElementById('stations');
                while (ul_stations.firstChild) {
                    ul_stations.removeChild(ul_stations.firstChild);
                }
                for (var i = 0; i < data["stations"].length; i++) {
                    // TODO: tutaj dodać markery na mapie dla stacji
                    var item = document.createElement('li');
                    var station = JSON.stringify(data["stations"][i]);
                    item.appendChild(document.createTextNode(station));
                    ul_stations.appendChild(item);
                }
            },
            dataType: 'json'
        });
    }



    function drawStartAndFinish(lon1, lat1, lon2, lat2) {
        console.log("Akcja!!!" + lon1 + " " +lat1 )
        var ico1 = new ol.Feature({
            //ol.proj.fromLonLat([min_lon, min_lat]);
            geometry:
                    new ol.geom.Point(ol.proj.transform([+lon1, +lat1], 'EPSG:4326','EPSG:3857')),
                    //new ol.geom.Point(ol.proj.fromLonLat([lat1, lon1])),
                    //ol.proj.transform([y1, x1], 'EPSG:4326','EPSG:3857')),
            name: 'Null Island',
            population: 4000,
            rainfall: 500
        });

        var ico2 = new ol.Feature({
            geometry: new ol.geom.Point(ol.proj.fromLonLat([+lon2, +lat2])),
            //ol.proj.transform([y1, x1], 'EPSG:4326','EPSG:3857')),
            name: 'Null Island',
            population: 4000,
            rainfall: 500
        });
        vectorSource.addFeature(ico1);
        vectorSource.addFeature(ico2);

    }

    var map = new ol.Map({
        target: 'map',
        layers: [
            new ol.layer.Tile({
                source: new ol.source.OSM()
            }),
            vectorLayer

        ]
        , view: view
    });

    map.on('moveend',onMoveEnd);

</script>